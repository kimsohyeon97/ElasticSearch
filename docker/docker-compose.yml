version: '3.8'

networks:
  spring-net:
    external: true
    name: spring-net

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - spring-net
    healthcheck:
      test: curl -s http://localhost:9200 || exit 1
      interval: 10s
      timeout: 10s
      retries: 10
    command: >
      bash -c "
      if [ ! -d 'plugins/analysis-nori' ]; then
        bin/elasticsearch-plugin install --batch analysis-nori;
      fi &&
      exec /usr/local/bin/docker-entrypoint.sh"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - spring-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.8.2
    container_name: logstash
    ports:
      - "9600:9600"  
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./mysql-connector:/usr/share/logstash/mysql-connector
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
    depends_on:
      mysql:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    networks:
      - spring-net


  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: "shop"
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - spring-net

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - spring-net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - spring-net

  spring-app:
    image: spring-app:1.0.2
    container_name: spring-app
    depends_on:
      - mysql
      - elasticsearch
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/shop?serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "1234"
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
    ports:
      - "8081:8080"
    networks:
      - spring-net

volumes:
  es-data:
  mysql-data:
  mongo-data:
  redis-data:
